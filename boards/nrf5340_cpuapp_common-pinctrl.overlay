
&pinctrl {
	pwm0_default: pwm0_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 6)>,
					<NRF_PSEL(PWM_OUT1, 1, 7)>,
					<NRF_PSEL(PWM_OUT2, 1, 8)>,
					<NRF_PSEL(PWM_OUT3, 1, 9)>;
		};
	};

	pwm0_sleep: pwm0_sleep {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 6)>,
					<NRF_PSEL(PWM_OUT1, 1, 7)>,
					<NRF_PSEL(PWM_OUT2, 1, 8)>,
					<NRF_PSEL(PWM_OUT3, 1, 9)>;  
			low-power-enable;
		};
	};
	spi4_default: spi4_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 1, 15)>,
				<NRF_PSEL(SPIM_MISO, 1, 14)>,
				<NRF_PSEL(SPIM_MOSI, 1, 13)>;
		};
	};

	spi4_sleep: spi4_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 1, 15)>,
				<NRF_PSEL(SPIM_MISO, 1, 14)>,
				<NRF_PSEL(SPIM_MOSI, 1, 13)>;
			low-power-enable;
		};
	};

	spi_master_default: spi_master_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 6)>,
					<NRF_PSEL(SPIM_MOSI, 0, 7)>,
					<NRF_PSEL(SPIM_MISO, 0, 25)>;
		};
	};

	spi_master_sleep: spi_master_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 6)>,
					<NRF_PSEL(SPIM_MOSI, 0, 7)>,
					<NRF_PSEL(SPIM_MISO, 0, 25)>;
			low-power-enable;
		};
	};

	spi_slave_default: spi_slave_default {
		group1 {
			psels = <NRF_PSEL(SPIS_SCK, 1, 5)>,
					<NRF_PSEL(SPIS_MOSI, 1, 4)>,
					<NRF_PSEL(SPIS_MISO, 1, 1)>,
					<NRF_PSEL(SPIS_CSN, 1, 0)>;
		};
	};

	spi_slave_sleep: spi_slave_sleep {
		group1 {
			psels = <NRF_PSEL(SPIS_SCK, 1, 5)>,
					<NRF_PSEL(SPIS_MOSI, 1, 4)>,
					<NRF_PSEL(SPIS_MISO, 1, 1)>,
					<NRF_PSEL(SPIS_CSN, 1, 0)>;
			low-power-enable;
		};
	};

	i2c1_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SCL, 1, 12)>,
					<NRF_PSEL(TWIM_SDA, 1, 13)>;
		};
	};
};
